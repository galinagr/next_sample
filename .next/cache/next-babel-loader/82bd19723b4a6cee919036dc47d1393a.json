{"ast":null,"code":"var _jsxFileName = \"/Users/gadar/Workplace/sample_next/pages/news.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-fetch';\nimport Error from './_error';\n\nconst News = ({\n  news\n}) => {\n  const searchForm = () => {\n    __jsx(\"form\", {\n      on: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    });\n  };\n\n  return __jsx(Layout, {\n    mainTitle: \"News\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"List of News\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), news.map((n, i) => __jsx(\"p\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: n.url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, n.title)))));\n};\n\nNews.getInitialProps = async () => {\n  let news;\n\n  try {\n    const res = await fetch(\"https://hn.algolia.com/api/v1/search?query=react\");\n    news = await res.json();\n  } catch (err) {\n    console.log(\"Error\", err);\n    news = [];\n  }\n\n  return {\n    news: news.hits\n  };\n};\n\nexport default News;","map":{"version":3,"sources":["/Users/gadar/Workplace/sample_next/pages/news.js"],"names":["Link","Head","Layout","fetch","Error","News","news","searchForm","handleSubmit","map","n","i","url","title","getInitialProps","res","json","err","console","log","hits"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACrB,QAAMC,UAAU,GAAG,MAAM;AACrB;AAAM,MAAA,EAAE,MAAR;AAAS,MAAA,QAAQ,EAAEC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,GAFD;;AAIA,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKF,IAAI,CAACG,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KACN;AAAG,IAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAED,CAAC,CAACE,GAAX;AAAgB,IAAA,MAAM,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCF,CAAC,CAACG,KAAnC,CADJ,CADH,CAHL,CADJ,CADJ;AAYH,CAjBD;;AAmBAR,IAAI,CAACS,eAAL,GAAuB,YAAW;AAC9B,MAAIR,IAAJ;;AAEA,MAAG;AACC,UAAMS,GAAG,GAAG,MAAMZ,KAAK,CAAC,kDAAD,CAAvB;AACAG,IAAAA,IAAI,GAAG,MAAMS,GAAG,CAACC,IAAJ,EAAb;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACAX,IAAAA,IAAI,GAAC,EAAL;AACH;;AACD,SAAO;AAACA,IAAAA,IAAI,EAAEA,IAAI,CAACc;AAAZ,GAAP;AACH,CAXD;;AAaA,eAAef,IAAf","sourcesContent":["import Link from 'next/link'\nimport Head from 'next/head'\nimport Layout from '../components/Layout'\nimport fetch from 'isomorphic-fetch'\nimport Error from './_error'\n\n\nconst News = ({news}) => {\n    const searchForm = () => {\n        <form on onSubmit={handleSubmit}></form>\n    }\n\n    return (\n        <Layout mainTitle=\"News\">\n            <div>\n                <h2>List of News</h2>\n                <hr/>\n                {news.map((n, i) => (\n                    <p key={i}>\n                        <a href={n.url} target=\"_blank\">{n.title}</a>\n                    </p>))}\n            </div>\n        </Layout>\n    )\n}\n\nNews.getInitialProps = async() => {\n    let news\n\n    try{\n        const res = await fetch(\"https://hn.algolia.com/api/v1/search?query=react\")\n        news = await res.json()\n    } catch (err) {\n        console.log(\"Error\", err)\n        news=[]\n    }\n    return {news: news.hits}\n}\n\nexport default News\n"]},"metadata":{},"sourceType":"module"}
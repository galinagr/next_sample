{"ast":null,"code":"var _jsxFileName = \"/Users/gadar/Workplace/sample_next/pages/news.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-fetch';\nimport Error from './_error';\nimport { useState } from 'react';\nimport Router from 'next/router';\n\nconst News = ({\n  news\n}) => {\n  // const [searchQuery, setSearchQuery] = useState('react')\n  const {\n    0: value,\n    1: setValue\n  } = useState({\n    text: 'react',\n    coolMsg: ''\n  });\n  const [text, coolMsg] = value;\n\n  const handleChange = name => e => {\n    // setSearchQuery(e.target.value)\n    setValue(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    Router.push(`/news/?searchTerm=${text}`);\n  };\n\n  const searchForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: searchQuery,\n    onChange: handleChange('text'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Something....\",\n    onChange: handleChange('coolMsg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Search button\"));\n\n  return __jsx(Layout, {\n    mainTitle: \"News\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"List of News\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), searchForm(), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), news.map((n, i) => __jsx(\"p\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    href: n.url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, n.title)))));\n};\n\nNews.getInitialProps = async query => {\n  let news;\n\n  try {\n    const res = await fetch(`https://hn.algolia.com/api/v1/search?query=${query.searchTerm}`);\n    news = await res.json();\n  } catch (err) {\n    console.log(\"Error\", err);\n    news = [];\n  }\n\n  return {\n    news: news.hits\n  };\n};\n\nexport default News;","map":{"version":3,"sources":["/Users/gadar/Workplace/sample_next/pages/news.js"],"names":["Link","Head","Layout","fetch","Error","useState","Router","News","news","value","setValue","text","coolMsg","handleChange","name","e","values","target","handleSubmit","preventDefault","push","searchForm","searchQuery","map","n","i","url","title","getInitialProps","query","res","searchTerm","json","err","console","log","hits"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport Head from 'next/head'\nimport Layout from '../components/Layout'\nimport fetch from 'isomorphic-fetch'\nimport Error from './_error'\nimport {useState} from 'react'\nimport Router from 'next/router'\n\n\nconst News = ({news}) => {\n    // const [searchQuery, setSearchQuery] = useState('react')\n\n    const [value, setValue] = useState({\n        text: 'react',\n        coolMsg: ''\n    })\n\n    const [text, coolMsg] = value\n\n    const handleChange = name => e => {\n        // setSearchQuery(e.target.value)\n        setValue({...values, [name] : e.target.value})\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        Router.push(`/news/?searchTerm=${text}`)\n    }\n\n    const searchForm = () => (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={searchQuery} onChange={handleChange('text')}/>\n            <input type=\"text\" placeholder=\"Something....\" onChange={handleChange('coolMsg')}/>\n            <button>Search button</button>\n        </form>\n    )\n\n    return (\n        <Layout mainTitle=\"News\">\n            <div>\n                <h2>List of News</h2>\n                <hr/>\n                {searchForm()}\n                <hr/>\n                {news.map((n, i) => (\n                    <p key={i}>\n                        <a href={n.url} target=\"_blank\">{n.title}</a>\n                    </p>))}\n            </div>\n        </Layout>\n    )\n}\n\nNews.getInitialProps = async (query) => {\n    let news\n\n    try {\n        const res = await fetch(`https://hn.algolia.com/api/v1/search?query=${query.searchTerm}`)\n        news = await res.json()\n    }\n    catch (err) {\n        console.log(\"Error\", err)\n        news = []\n    }\n    return {news: news.hits}\n}\n\nexport default News\n"]},"metadata":{},"sourceType":"module"}
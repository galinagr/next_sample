{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gadar/Workplace/sample_next/pages/news.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Layout from '../components/Layout';\nimport fetch from 'isomorphic-fetch';\nimport Error from './_error';\nimport { useState } from 'react';\nimport Router from 'next/router';\n\nvar News = function News(_ref) {\n  _s();\n\n  var news = _ref.news;\n\n  // const [searchQuery, setSearchQuery] = useState('react')\n  var _useState = useState(),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleTextChange = function handleTextChange(e) {\n    setSearchQuery(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    Router.push(\"/news/?searchTerm=\".concat(searchQuery));\n  };\n\n  var searchForm = function searchForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: handleTextChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }), __jsx(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Search button\"));\n  };\n\n  return __jsx(Layout, {\n    mainTitle: \"News\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"List of News\"), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), searchForm(), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), news.map(function (n, i) {\n    return __jsx(\"p\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      href: n.url,\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, n.title));\n  })));\n};\n\n_s(News, \"hWRfrSP8yP0Yit5gONTVsURNXRY=\");\n\n_c = News;\n\nNews.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n    var news, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"https://hn.algolia.com/api/v1/search?query=\".concat(query.searchTerm));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            news = _context.sent;\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error\", _context.t0);\n            news = [];\n\n          case 13:\n            return _context.abrupt(\"return\", {\n              news: news.hits\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/Users/gadar/Workplace/sample_next/pages/news.js"],"names":["Link","Head","Layout","fetch","Error","useState","Router","News","news","value","setValue","handleTextChange","e","setSearchQuery","target","handleSubmit","preventDefault","push","searchQuery","searchForm","map","n","i","url","title","getInitialProps","query","searchTerm","res","json","console","log","hits"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AACrB;AADqB,kBAGKH,QAAQ,EAHb;AAAA,MAGdI,KAHc;AAAA,MAGPC,QAHO;;AAKrB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,CAAC,EAAI;AAC1BC,IAAAA,cAAc,CAACD,CAAC,CAACE,MAAF,CAASL,KAAV,CAAd;AACH,GAFD;;AAIA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAAAH,CAAC,EAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF;AACAV,IAAAA,MAAM,CAACW,IAAP,6BAAiCC,WAAjC;AACH,GAHD;;AAKA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WACf;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEG,WAA1B;AAAuC,MAAA,QAAQ,EAAEP,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CADe;AAAA,GAAnB;;AAOA,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKQ,UAAU,EAHf,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKX,IAAI,CAACY,GAAL,CAAS,UAACC,CAAD,EAAIC,CAAJ;AAAA,WACN;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAED,CAAC,CAACE,GAAX;AAAgB,MAAA,MAAM,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCF,CAAC,CAACG,KAAnC,CADJ,CADM;AAAA,GAAT,CALL,CADJ,CADJ;AAcH,CAnCD;;GAAMjB,I;;KAAAA,I;;AAqCNA,IAAI,CAACkB,eAAL;AAAA,uEAAuB,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIGvB,KAAK,sDAA+CuB,KAAK,CAACC,UAArD,EAJR;;AAAA;AAITC,YAAAA,GAJS;AAAA;AAAA,mBAKFA,GAAG,CAACC,IAAJ,EALE;;AAAA;AAKfrB,YAAAA,IALe;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQfsB,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAvB,YAAAA,IAAI,GAAG,EAAP;;AATe;AAAA,6CAWZ;AAACA,cAAAA,IAAI,EAAEA,IAAI,CAACwB;AAAZ,aAXY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAezB,IAAf","sourcesContent":["import Link from 'next/link'\nimport Head from 'next/head'\nimport Layout from '../components/Layout'\nimport fetch from 'isomorphic-fetch'\nimport Error from './_error'\nimport {useState} from 'react'\nimport Router from 'next/router'\n\n\nconst News = ({news}) => {\n    // const [searchQuery, setSearchQuery] = useState('react')\n\n    const [value, setValue] = useState()\n\n    const handleTextChange = e => {\n        setSearchQuery(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        Router.push(`/news/?searchTerm=${searchQuery}`)\n    }\n\n    const searchForm = () => (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={searchQuery} onChange={handleTextChange}/>\n            <button>Search button</button>\n        </form>\n    )\n\n    return (\n        <Layout mainTitle=\"News\">\n            <div>\n                <h2>List of News</h2>\n                <hr/>\n                {searchForm()}\n                <hr/>\n                {news.map((n, i) => (\n                    <p key={i}>\n                        <a href={n.url} target=\"_blank\">{n.title}</a>\n                    </p>))}\n            </div>\n        </Layout>\n    )\n}\n\nNews.getInitialProps = async (query) => {\n    let news\n\n    try {\n        const res = await fetch(`https://hn.algolia.com/api/v1/search?query=${query.searchTerm}`)\n        news = await res.json()\n    }\n    catch (err) {\n        console.log(\"Error\", err)\n        news = []\n    }\n    return {news: news.hits}\n}\n\nexport default News\n"]},"metadata":{},"sourceType":"module"}